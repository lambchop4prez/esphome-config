esphome:
  name: kitchen-1
  platform: ESP32
  board: wemos_d1_mini32

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  fast_connect: true
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Kitchen Fallback"
    password: "huo1rMZ7ugdp"

captive_portal:

# Enable logging
logger:

globals:
  id: effects
  type: std::string[3]
  initial_value: "{\"addressable_rainbow\", \"addressable_scan\", \"addressable_fireworks\"}"

# Enable Home Assistant API
api:

ota:

i2c:
  - id: bus_0
    sda: 17
    scl: 16

output:
  - id: light_1
    platform: ledc
    pin: GPIO23


light:
  - name: "Over-Cabinet Light"
    platform: neopixelbus
    id: neopixel_0
    pin: GPIO21
    num_leds: 72
    variant: WS2812
    method: ESP32_I2S_1
    effects:
      - random:
      - pulse:
      - flicker:
      - addressable_rainbow:
      - addressable_color_wipe:
      - addressable_scan:
      - addressable_twinkle:
      - addressable_random_twinkle:
      - addressable_fireworks:
      - addressable_flicker:
  - name: "Under-Cabinet 1"
    platform: monochromatic
    output: light_1
    id: under_cabinet_1
  



esp32_touch:

binary_sensor:
  - platform: esp32_touch
    name: "ESP32 Touch Pad GPIO27"
    pin: GPIO27
    threshold: 1000
    on_click:
      then:
        - light.toggle: under_cabinet_1
    on_double_click:
      then:
        - if:
            condition:
              light.is_on: neopixel_0
            then:
              light.turn_off:
                id: neopixel_0
        - if:
            condition:
              light.is_off: neopixel_0
            then:
              light.turn_on:
                id: neopixel_0
                effect: !lambda |-
                  return id(effects)[rand() % 3];
